
#ifndef SOUND_H_
#define SOUND_H_

#include <Arduino.h>
#include "constants.h"

#define ONE_BEAT 175 // for 150 bpm
#define TWO_BEAT ONE_BEAT * 2
#define FOUR_BEAT TWO_BEAT * 2
#define ONE_HALF_BEAT ONE_BEAT * 1.5
#define THREE_BEAT ONE_BEAT * 3
#define HALF_BEAT ONE_BEAT / 2
#define TRIPLET_BEAT ONE_BEAT / 3
#define QUARTER_BEAT HALF_BEAT / 2
#define SIXTH_BEAT HALF_BEAT / 3
#define EIGTH_BEAT QUARTER_BEAT/2
#define SIXTEENTH_BEAT EIGTH_BEAT/2
#define DOTTED_HALF_BEAT ONE_BEAT / 1.5

#define REST NOTE_MAX

typedef enum{
	START_UP,
	AMM_ALARM,
    WL_ALARM
} audioToPlay;

struct noteStruct {
  note_t note;
  uint8_t octave;
  uint8_t duration;
};

#define BUZZER_CHANNEL 0

const struct noteStruct dejavu[] = {
  {REST, 0, ONE_BEAT},{NOTE_Bb, 6,HALF_BEAT},{NOTE_Bb, 6,ONE_BEAT},{NOTE_F, 6,ONE_HALF_BEAT},
  {REST, 0, ONE_BEAT},{NOTE_Bb, 6,HALF_BEAT},{NOTE_Bb, 6,ONE_BEAT},{NOTE_F, 6,ONE_HALF_BEAT},
  {REST, 0, HALF_BEAT}, {NOTE_Bb, 5, HALF_BEAT}, {NOTE_D, 6,HALF_BEAT}, {NOTE_Bb, 5, HALF_BEAT}, {NOTE_D, 6, HALF_BEAT}, {NOTE_Bb, 5, HALF_BEAT}, {NOTE_D, 6, HALF_BEAT},
  {NOTE_Eb, 6, ONE_HALF_BEAT}, {REST, 0, HALF_BEAT}, {NOTE_G, 6, ONE_BEAT}, {NOTE_F, 6, HALF_BEAT}, {NOTE_Eb, 6, HALF_BEAT}, {NOTE_D, 6, HALF_BEAT},
  {REST, 0, ONE_BEAT},{NOTE_Bb,6,HALF_BEAT},{NOTE_Bb,6,ONE_BEAT},{NOTE_F, 6,ONE_HALF_BEAT},
  {REST, 0, ONE_BEAT}, {NOTE_Eb, 5,HALF_BEAT}, {NOTE_Eb, 5,HALF_BEAT}, {NOTE_D, 5, HALF_BEAT}, {NOTE_C, 5, HALF_BEAT}, {NOTE_Bb, 4, ONE_BEAT},  //, 6
  {NOTE_C, 5, ONE_BEAT},{NOTE_C, 5,HALF_BEAT},{NOTE_F, 5,QUARTER_BEAT},{NOTE_G, 5,QUARTER_BEAT},{NOTE_C, 6,QUARTER_BEAT},{NOTE_C, 6,QUARTER_BEAT},{NOTE_F, 6,QUARTER_BEAT},{NOTE_G, 6,QUARTER_BEAT},{NOTE_C, 7,QUARTER_BEAT},{NOTE_C, 7,QUARTER_BEAT},{NOTE_F, 7,QUARTER_BEAT},{NOTE_G, 7,QUARTER_BEAT},{NOTE_C,8,HALF_BEAT},
  {REST, 0, ONE_HALF_BEAT}, {REST, 0,HALF_BEAT},{NOTE_C, 6, HALF_BEAT}, {NOTE_D, 6, HALF_BEAT}, {NOTE_Eb, 6, ONE_HALF_BEAT},  //, 6
  {NOTE_Eb, 6, HALF_BEAT},{NOTE_Eb, 6, HALF_BEAT},{NOTE_Eb, 6, HALF_BEAT}, {NOTE_Bb, 5, HALF_BEAT}, {NOTE_G, 5, HALF_BEAT}, {NOTE_Bb, 5, ONE_BEAT},  //, 6
  {NOTE_C, 6, HALF_BEAT}, {NOTE_C, 6, ONE_BEAT}, {NOTE_G, 6, HALF_BEAT}, {NOTE_F, 6, HALF_BEAT}, {NOTE_Eb, 6, HALF_BEAT}, {NOTE_D, 6, HALF_BEAT}, //, 6
  {NOTE_Eb, 6,ONE_BEAT},{NOTE_Eb, 6,HALF_BEAT},{NOTE_Eb, 6,HALF_BEAT},{NOTE_F, 6,HALF_BEAT},{NOTE_Eb, 6,HALF_BEAT},{NOTE_F, 6,HALF_BEAT},{NOTE_F, 6,ONE_BEAT}, //, 7
  {NOTE_G, 6,HALF_BEAT},{NOTE_G, 6,HALF_BEAT},{NOTE_F, 6, ONE_BEAT},{NOTE_C, 6,HALF_BEAT},{NOTE_D, 6,HALF_BEAT},{NOTE_Eb, 6,ONE_HALF_BEAT}, //, 6
  {NOTE_Eb, 6, HALF_BEAT},{NOTE_Eb, 6, HALF_BEAT},{NOTE_F, 6, HALF_BEAT},{NOTE_D, 6, HALF_BEAT},{NOTE_Bb, 5, HALF_BEAT},{NOTE_Bb, 5,ONE_BEAT}, //, 6
  {NOTE_C, 6, HALF_BEAT},{NOTE_C, 6,ONE_BEAT},{NOTE_Eb, 6, HALF_BEAT},{NOTE_D, 6, HALF_BEAT},{NOTE_C, 6, HALF_BEAT},{NOTE_Bb, 5, HALF_BEAT}, //, 6
  {NOTE_C, 6,ONE_BEAT},{NOTE_Eb, 7, HALF_BEAT},{NOTE_Eb, 7, HALF_BEAT},{NOTE_F, 7, HALF_BEAT},{NOTE_Eb, 7, HALF_BEAT},{NOTE_F, 7, HALF_BEAT},{NOTE_F, 7,ONE_BEAT}, //7
  {NOTE_G, 7, HALF_BEAT},{NOTE_G, 7, HALF_BEAT},{NOTE_F, 7,TWO_BEAT}, {REST, 0, TWO_BEAT}, //3
  {NOTE_G, 7,HALF_BEAT},{REST, 0,HALF_BEAT},{NOTE_G, 7,HALF_BEAT},{REST, 0,HALF_BEAT},{NOTE_G, 7,HALF_BEAT},{NOTE_G, 7,TWO_BEAT}, // , 6
  {REST, 0, TWO_BEAT} // 1
};

#define DEJAVU_SPEED 1

void audio_setup(void);

void play_audio(audioToPlay toPlay);

void stop_music(void);


#endif